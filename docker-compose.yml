version: '3.4'

x-web: &web
  build: .
  command: bash -c "rm -f tmp/pids/server`printenv APP_ID`.pid && bundle exec rails s -p 3000 -b '0.0.0.0' -P tmp/pids/server`printenv APP_ID`.pid"
  volumes:
    - .:/myapp
  depends_on:
    - db
    - kafka

x-karafka-server: &karafka-server
  <<: *web
  command: bash -c 'rm -f tmp/pids/karafka_server_`printenv APP_ID`.pid && bundle exec karafka server -p tmp/pids/karafka_server_`printenv APP_ID`.pid'

services:
  db:
    image: mysql:5.7
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 3306:3306

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka"
      KAFKA_CREATE_TOPICS: "party:1:1"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  manager:
    image: sheepkiller/kafka-manager
    ports:
      - "9000:9000"
    environment:
      - ZK_HOSTS=zookeeper:2181
    depends_on:
      - kafka
      - zookeeper

  karafka_server_1:
    <<: *karafka-server
    environment:
      APP_ID: 1 

  karafka_server_2:
    <<: *karafka-server
    environment:
      APP_ID: 2 

  karafka_server_3:
    <<: *karafka-server
    environment:
      APP_ID: 3 

  web_1:
    <<: *web
    ports:
      - "3000:3000"
    environment:
      - APP_NAME=Legacy Monolith
      - APP_ID=1

  web_2:
    <<: *web
    ports:
      - "3001:3000"
    environment:
      - APP_NAME=Consumer Web Application
      - APP_ID=2

  web_3:
    <<: *web
    ports:
      - "3002:3000"
    environment:
      - APP_NAME=Reporting Database
      - APP_ID=3

